MEMORY {
    MEM_00:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_02:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_03:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_04:     start = $8000, size = $2000, fill = yes, fillval = $FF;
    MEM_05:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_06:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_07:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_08:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_0A:     start = $8000, size = $4000, fill = yes, fillval = $FF;
    MEM_0C:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_10:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_14:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_18:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_1C:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_20:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_21:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_22:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_23:     start = $A000, size = $2000, fill = yes, fillval = $FF;
    MEM_24:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_28:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_30:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_34:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_38:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_2C:     start = $8000, size = $8000, fill = yes, fillval = $FF;
    MEM_3C:     start = $C000, size = $2000, fill = yes, fillval = $FF;
    MEM_3D:     start = $C000, size = $2000, fill = yes, fillval = $FF;
    MEM_3E:     start = $6000, size = $2000, fill = yes, fillval = $FF;
    MEM_FF:     start = $E000, size = $2000, fill = yes, fillval = $FF;
}

SEGMENTS {
    BANK_00:    load = MEM_00, align = $4000;
    
    BANK_02:    load = MEM_02, align = $2000;
    
    BANK_03:    load = MEM_03, align = $2000;
    
    BANK_04:    load = MEM_04, align = $2000;
    
    BANK_05:    load = MEM_05, align = $2000;
    
    BANK_06:    load = MEM_06, align = $2000;
    
    BANK_07:    load = MEM_07, align = $2000;
    
    BANK_08:    load = MEM_08, align = $4000;
    
    BANK_0A:    load = MEM_0A, align = $4000;
    
    BANK_0C:    load = MEM_0C, align = $8000;
    DPCM_0C:    load = MEM_0C, start = $D140;
    
    BANK_10:    load = MEM_10, align = $8000;
    DPCM_10:    load = MEM_10, start = $D140;
    
    BANK_14:    load = MEM_14, align = $8000;
    DPCM_14:    load = MEM_14, start = $D140;
    
    BANK_18:    load = MEM_18, align = $8000;
    DPCM_18:    load = MEM_18, start = $D140;
    
    BANK_1C:    load = MEM_1C, align = $8000;
    DPCM_1C:    load = MEM_1C, start = $D140;
    
    BANK_20:    load = MEM_20, align = $2000;
    
    BANK_21:    load = MEM_21, align = $2000;
    
    BANK_22:    load = MEM_22, align = $2000;
    
    BANK_23:    load = MEM_23, align = $2000;
    
    BANK_24:    load = MEM_24, align = $8000;
    DPCM_24:    load = MEM_24, start = $D140;
    
    BANK_28:    load = MEM_28, align = $8000;
    DPCM_28:    load = MEM_28, start = $D140;
    
    BANK_2C:    load = MEM_2C, align = $8000;
    DPCM_2C:    load = MEM_2C, start = $D140;
    
    BANK_30:    load = MEM_30, align = $8000;
    DPCM_30:    load = MEM_30, start = $D140;
    
    BANK_34:    load = MEM_34, align = $8000;
    DPCM_34:    load = MEM_34, start = $D140;
    
    BANK_38:    load = MEM_38, align = $8000;
    DPCM_38:    load = MEM_38, start = $D140;
    
    BANK_3C:    load = MEM_3C, align = $2000;
    
    BANK_3D:    load = MEM_3D, align = $2000;
    
    DPCM_3D:    load = MEM_3D, start = $D140;
    
    BANK_3E:    load = MEM_3E, align = $2000;
    
    BANK_FF:    load = MEM_FF, align = $2000;
    MMC5_INIT:  load = MEM_FF, start = $FFD0;
    VECTORS:    load = MEM_FF, start = $FFFA;
}